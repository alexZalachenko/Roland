#version 330 core

uniform mat4 modelMatrix;
uniform mat4 viewMatrix;
uniform mat4 projectionMatrix;

layout (location = 0) in vec3  in_position;
layout (location = 1) in vec4  in_color;
layout (location = 2) in vec2  in_textCoord;
layout (location = 3) in vec3  in_normal;

out vec4 color;
out vec2 textCoord;
out vec3 normal;
out vec3 fragmentPosition;

void main()
{
	gl_Position		 = projectionMatrix * viewMatrix * modelMatrix * vec4(in_position, 1.0);
	color			 = in_color;
	textCoord		 = vec2(in_textCoord.x, 1 - in_textCoord.y);
	normal			 = in_normal;
	fragmentPosition = vec3(modelMatrix * vec4(in_position, 1.0));
}